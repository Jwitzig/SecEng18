begin abstract-base-policy DRBAC_IBAC:

    begin inheritance:
    end inheritance;

    begin components:
		set R;               //Rollen
   		set E;               //Pr√ºfungen
		set O;               //Object
		set OP;              //Operation
		relation PA(OP, O, R);
		set U;               //Users
		set S;               //Sessions
    		set B;               //Berechtigung

    		relation m(U,E,B)
		relation UA(U, R);
		mapping user( S : U );
		mapping roles( S : 2^R );
    end components;

    begin conditions:
        f_drbac(U u1, O o1, OP op1):
            exists s1 in S: (
            	u1 == user(s1) and
		exists r1 in roles(s1): [op1, o1, r1] in PA
		);

        f_ibac(U u1, O o1, B b1):
          exists s1 in S: (
            u1 == user(s1) and
            exists [u1,o1,b1] in m
      );

        has_role(U u1, R r1):
            [u1, r1] in UA;

        has_right(B b1, S s1, O o1):
            [s1,o1,b1] in m;

        owns_session(U u1, S s1):
        	u1 == user(s1);
    end conditions;

    begin primitives:
       begin create_user(U u1):
           U = U + { u1 };
       end;

       begin delete_user(U u1):
           U = U - { u1 };
       end;

       begin assign_role_to_user(U u1, R r1):
           UA = UA + { [u1, r1] };
       end;

       begin create_session(S s1, U u1):
           S = S + { s1 };
           user = user + { (s1 : u1) };
       end;

       begin delete_session(S s1, U u1):
           S = S - { s1 };
           user = user - { (s1) };
           roles = roles - { (s1) };
       end;

       begin activate_role(S s1, R r1):
           rs = roles(s1);
           rs = rs + { r1 };
           roles = roles + { (s1 : rs) };
       end;

       begin deactivate_role(S s1, R r1):
           rs = roles(s1);
           rs = rs - { r1 };
           roles = roles + { (s1 : rs ) };
       end;

       begin enter_right(B b1, S s1, O o1):
           m = m + { (s1,o1,b1) };
       end;

       begin revoke_right(B b1, S s1, O o1):
           m(s1,o1) = m(s1,01) - { b1 };
       end;

    end primitives;

end abstract-base-policy;
