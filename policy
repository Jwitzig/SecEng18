begin policy open_university : DRBAC_0 :

    state-space: {  U, S, UA, user, roles, m };

    input-vector:  { U, O, S , R };

    begin authorisation-scheme:


    	new_student(U caller, U student):
    		condition:
		f_drbac(caller, 'Nutzerkatalog', 'new_student') 

    		begin body:
    			create_user(student);
    			assign_role_to_user(student, 'student');
			enter_right('write', student);
        	 	enter_right('read', student);
    		end body;


    	delete_student(U caller, U student):
    		condition:
    			f_drbac(caller, 'Nutzerkatalog', 'delete_student')

        	begin body:
    			delete_user(student);
	  	end body;





	change_pers_data():
    		condition:
    			f_drbac(caller, 'Nutzerkatalog', 'change_pers_data') and 
			

        	begin body:
    
	  	end body;


	read_pers_date()
		condition: 

		begin body: 
		end body: 



	register_for_exam()
		condition: 

		begin body: 
		end body: 

	sign_out_exam()
		condition: 

		begin body: 
		end body: 



	create_list()
		condition: 

		begin body: 
		end body: 



	display_mark()
		condition: 

		begin body: 
		end body: 



	enter_mark(U caller, U student, O exam)
		condition: 
			f_drbac(caller, 'Pruefungskatalog', 'enter_mark') and
			f_ibac(caller, exam, 'write')	and 
			f_ibac(student, exam, 'angemeldet')	and 
			has_role(caller, 'PAM') 

		begin body: 
			revoke_right('angemeldet', student, exam)
		end body: 



	change_mark(U caller)
		condition: 
			f_drbac(caller, 'Pruefungskatalog', 'change_mark')

		begin body: 
		end body: 



	lougout_user()
		condition: 

		begin body: 
		end body: 



	login_user()
		condition: 

		begin body: 
		end body: 


 end authorisation-scheme;

    begin initial-state:
        U = { ... ??? ..., 'Simon' };

        S = { 's1' };

        UA = { 	['Simon', 'administrator'],
        		... ??? ... };

        user = { ('s1'	: 	'Simon') };

        roles = { ('s1':	{ 'administrator' }) };
    end initial-state;

    begin extension-vector:
        B = { 'write', 'read', 'angemeldet' }

        R = { 'student', 'pruefer', 'PAM', 'administrator' };

        O = { 'Nutzerkatalog', 'Pruefungskatalog'};

        OP = { 'change_pers_data', 'read_pers_data', 'new_student','delete_student', 'register_for_exam', 'sign_out_exam', 'create_list',
         'display_mark', 'change_mark', 'login_user', 'logout_user'};

        PA = {
            ['PAM', 'Nutzerkatalog', new_student],
            ['PAM', 'Pruefungskatalog', register_for_exam],

            ... ??? ...
        };
    end extension-vector;

end policy;
